<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">

<!-- 게시글 작성  -->
<insert id="board_write_insert">
	INSERT INTO 
		board (
			   board_title, 
			   board_contents, 
			   board_write_date, 
			   board_fix_check, 
			   board_delete_check, 
			   emp_num, 
			   board_category_num, 
			   board_file_name, 
			   board_file_route
			   )
	VALUES 
		    (
		    #{board_title}, 
		    #{board_contents}, 
		    now(), 
		    #{board_fix_check}, 
		    #{board_delete_check}, 
		    #{emp_num}, 
		    #{board_category_num}, 
		    #{board_file_name}, 
		    #{board_file_route}
		    );
</insert>



<!-- ================================================================================================================================ -->
<!-- 일반게시판 -->

<!-- 검색을 위한 동적 sql -->
<sql id="search">
	<if test="searchType == 'board_all'.toString()"> AND (board_title like CONCAT('%',#{keyword},'%'"))
													OR (E.emp_name like CONCAT('%',#{keyword},'%'))</if>
	<if test="searchType == 'board_title'.toString()"> AND board_title like CONCAT('%',#{keyword},'%') </if>
	<if test="searchType == 'emp_name'.toString()"> AND E.emp_name like CONCAT('%',#{keyword},'%')</if>
</sql>

<!-- 일반 게시판 총 개수구하기 -->
<select id="countTotal_normalList" resultType="Integer">
	SELECT
		count(*),
		E.emp_name
	FROM 
		board B JOIN employee E 
	ON 
		B.emp_num = E.emp_num 
	WHERE 
		board_category_num = 600
	<include refid="search"></include>;
</select>

<!-- 일반 게시판 글 보이기 -->
<select id="board_normal_selectList" parameterType="hashMap" resultType="hashMap">
	SELECT 
		B.board_num, 
		B.board_title, 
		E.emp_name, 
		E.emp_num, 
		B.board_write_date, 
		B.board_view_count, 
		D.dept_name,
		(SELECT count(*) 
		FROM 
			board_comment 
		WHERE board_num = B.board_num) as comment_count
	FROM 
		board B JOIN employee E 
	ON 
		B.emp_num = E.emp_num 
	JOIN 
		department D 
	ON 
		D.dept_code = E.dept_code
	WHERE 
	 	B.board_category_num = 600
	<include refid="search"></include>
	ORDER BY 
		B.board_num desc
	LIMIT #{pageStart}, #{perPageNum};
</select>


<!-- 공지게시판 -->
<!-- 공지게시판 개수 구하기 -->
<select id="countTotal_noticeList" resultType="Integer">
	SELECT
		count(*)
	FROM 
		board
	WHERE 
		board_category_num = 500;
</select>

<!-- 공지 게시판 글 보이기 -->
<select id="board_notice_selectList" parameterType="com.team3.groupware.eunji.model.BoardVO" resultType="hashMap">
	SELECT 
		B.board_num, 
		B.board_title, 
		E.emp_name,
		E.emp_num, 
		B.board_write_date, 
		B.board_view_count, 
		D.dept_name,
		(SELECT count(*) 
		FROM 
			board_comment 
		WHERE board_num = B.board_num) as comment_count
	FROM 
		board B JOIN employee E 
	ON 
		B.emp_num = E.emp_num
	JOIN department D 
	ON 
		D.dept_code = E.dept_code
	WHERE 
		B.board_category_num = 500
	<include refid="search"></include>
	ORDER BY 
		B.board_num desc
	LIMIT #{pageStart}, #{perPageNum};
</select>



<!-- ================================================================================================================================ -->
<!-- 디테일 페이지 보기 -->
<select id="board_detail" parameterType="hashMap" resultType="hashMap">
	SELECT 
		B.board_num, 
		B2.board_category_subject, 
		B.board_title, 
		B.board_contents, 
		E.emp_name, 
		E.emp_num, 
		D.dept_name, 
		B.board_write_date, 
		B.board_file_route, 
		B.board_file_name
	FROM 
		board B JOIN employee E 
	ON 
		B.emp_num = E.emp_num
	JOIN 
		board_category B2
	ON 
		B.board_category_num = B2.board_category_num
	JOIN 
		department D
	ON 
		D.dept_code = E.dept_code
	WHERE 
		B.board_num = #{board_num};
</select>



<!-- ================================================================================================================================ -->
<!-- 게시글 수정하기 -->
<update id="board_modify">
	UPDATE 
		board 
	SET 
		board_title=#{board_title}, 
		board_contents=#{board_contents},
		board_write_date=now(),
		board_fix_check=#{board_fix_check},
		board_file_route=#{board_file_route}
	WHERE 
		board_num=#{board_num};
</update>

<!-- 게시글 삭제하기 -->
<delete id="board_delete">
	DELETE FROM 
		board 
	WHERE 
		board_num =#{board_num};
</delete>

<!-- 게시글 검색하기 -->
<select id="board_search" parameterType="hashMap" resultType="hashMap">
	SELECT 
		B.board_num, 
		B.board_title, 
		E.emp_name, 
		B.board_write_date, 
		B.board_view_count 
	FROM 
		board B JOIN employee E 
	ON 
		B.emp_num = E.emp_num
	JOIN 
		department D 
	ON 
		D.dept_code = E.dept_code
	WHERE
	
	<choose>
		<when test="board_search == 'board_all'">
			
				board_title LIKE CONCAT('%',#{keyword},'%')
			OR 
				emp_name LIKE CONCAT('%',#{keyword},'%')
		</when>
		<otherwise>
			${board_search} LIKE CONCAT('%',#{keyword},'%')
		</otherwise>
	</choose>
		
	AND 
		B.board_category_num = 600
	ORDER BY 
		B.board_num desc;
</select>

<!-- 조회수 증가하기 -->
<update id="view_plus">
	UPDATE 
		board 
	SET 
		board_view_count = board_view_count + 1
	WHERE 
		board_num=#{board_num};
</update>

<!-- ================================================================================================================================ -->
<!-- 자로실 -->
<!-- 자료실 개수 구하기 -->
<select id="countTotal_boardDocuList" resultType="Integer">
	SELECT
		count(*)
	FROM 
		board
	WHERE 
		board_category_num = 700;
</select>

<!-- 자료실 리스트 보이기 -->
<select id="board_selectDList" parameterType="com.team3.groupware.eunji.model.BoardVO" resultType="hashMap">
	SELECT 
		B.board_num, 
		B.board_title, 
		E.emp_name,
		E.emp_num, 
		B.board_write_date, 
		B.board_view_count, 
		D.dept_name,
		(SELECT count(*) 
		FROM 
			board_comment 
		WHERE board_num = B.board_num) as comment_count
	FROM 
		board B JOIN employee E 
	ON 
		B.emp_num = E.emp_num
	JOIN department D 
	ON 
		D.dept_code = E.dept_code
	WHERE 
		B.board_category_num = 700
	<include refid="search"></include>
	ORDER BY 
		B.board_num desc
	LIMIT #{pageStart}, #{perPageNum};
</select>


<!-- ================================================================================================================================ -->
<!-- 댓글 -->
<!-- 댓글 입력 -->
<insert id="board_comment_insert" parameterType="hashMap">
   	INSERT INTO 
   		board_comment (
   					  board_num, 
   					  emp_num, 
   					  comment_date, 
   					  comment_contents
   					  )
    VALUE (
    	   #{board_num},
    	   #{emp_num}, 
    	   now(), 
    	   #{comment_contents}
    	   );
</insert>

<!-- 댓글 보이기 -->
<select id="board_comment_selectList" resultType="hashMap" >
	SELECT 
		E.emp_name, 
		E.emp_num, 
		D.dept_name, 
		B.comment_num,
		B.board_num, 
		B.comment_date,
		B.comment_contents, 
		B.comment_fix_check, 
		B.comment_delete_check
    FROM 
    	board_comment B JOIN employee E
    ON 
    	B.emp_num = E.emp_num
    JOIN 
    	department D 
    ON 
    	D.dept_code = E.dept_code
    WHERE 
    	B.board_num = #{board_num}
    ORDER BY
    	comment_num desc; 
</select>

<!-- 댓글 개수 보이기 -->
<select id="comment_count" resultType="Integer">
	SELECT 
		count(comment_num)
	FROM 
		board_comment
	WHERE 
		board_num = #{board_num};
</select>

<!-- 댓글 삭제하기 -->
<delete id="comment_delete">
	DELETE FROM 
		board_comment 
	WHERE 
		comment_num =#{comment_num};
</delete>





</mapper>