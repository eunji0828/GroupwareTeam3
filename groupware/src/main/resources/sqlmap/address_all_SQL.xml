<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="address_all">


   <!-- 전체 사원리스트 불러오기 -->
	<select id="findListAll" resultType="com.team3.groupware.common.model.EmployeeVO">
		select emp_name, position_name, dept_name, emp_no, fk_dept_no
		from emp_table
		order by emp_no desc;
	</select>
   
   <!-- 해당 부서 사원리스트 불러오기 -->
   <select id="findList" parameterType="HashMap" resultType="com.team3.groupware.common.model.EmployeeVO">
		select E.emp_name as emp_name, E.position_grade as position_grade, D.dept_name as dept_name, 
		E.emp_num as emp_num, E.dept_code as dept_code
		from employee E left join department D
		on E.dept_code = D.dept_code
		<if test="dept_code != null">
		where E.dept_code = #{dept_code} <!-- 부서와 jsp 해당 클래스의 value 값 비교 -->
		</if>
		order by emp_num desc;
   </select>
   
   <!-- 전사주소록 사원리스트 불러오기 -->
   <select id="address_all_list" parameterType="hashMap" resultType="hashMap">  
 
	select  
	e.emp_name,  
	e.position_grade,  
	e.emp_phonenum,  
	e.emp_email,  
	d.dept_name,
	e.emp_desk_num,
	e.emp_address
	  
	from  
	employee e join department d
    on e.dept_code = d.dept_code;

</select>  
  <!-- 전사주소록 사원리스트 초성검색 -->
<select id="address_chosung_list" parameterType="hashMap" resultType="hashMap">  
 <![CDATA[  
	select  
	e.emp_name,  
	e.position_grade,  
	e.emp_phonenum,  
	e.emp_email,  
	d.dept_name,
	e.emp_desk_num,
	e.emp_address
	  
	from  
	employee e join department d
    on e.dept_code = d.dept_code
    WHERE (e.emp_name >= #{first_consonant} AND e.emp_name < #{second_consonant} );
    
]]>
</select>  
 	<!-- 전사주소록 사원리스트 초성검색중 전체부분 -->
<select id="address_whole_list" parameterType="hashMap" resultType="hashMap">  
 <![CDATA[  
	select  
	e.emp_name,  
	e.position_grade,  
	e.emp_phonenum,  
	e.emp_email,  
	d.dept_name,
	e.emp_desk_num,
	e.emp_address
	  
	from  
	employee e join department d
    on e.dept_code = d.dept_code
    WHERE (e.emp_name >= #{first_consonant} AND e.emp_name < #{second_consonant} );
    
]]>
</select>
	<!-- 전사주소록 검색 -->
	
<select id="address_search" parameterType="hashMap" resultType="hashMap">  
 
	select  
	e.emp_name,  
	e.position_grade,  
	e.emp_phonenum,  
	e.emp_email,  
	d.dept_name,
	e.emp_desk_num,
	e.emp_address
	  
	from  
	employee e join department d
    on e.dept_code = d.dept_code
    where 
    e.emp_name
	like CONCAT('%',#{keyword},'%');

</select>  
  
</mapper>